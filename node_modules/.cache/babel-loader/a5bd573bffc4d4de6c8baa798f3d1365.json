{"ast":null,"code":"var _jsxFileName = \"/Users/srba/OneDrive/PROJECTS/gastfreund/kanban-board/src/components/Board/Board.tsx\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Column from '../Column';\nimport { Container, BoardContainer, SearchInput } from './styles';\n\nfunction Board() {\n  const columns = useSelector(state => state);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(SearchInput, {\n    type: \"text\",\n    value: searchTerm,\n    onChange: handleSearchChange,\n    placeholder: \"Search\",\n    \"aria-label\": \"Search for a specific ticket\",\n    \"data-testid\": \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(BoardContainer, {\n    \"data-testid\": \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, Object.values(columns).map(({\n    id,\n    title,\n    tickets\n  }) => {\n    const filteredTickets = tickets.filter(ticket => ticket.text.toLowerCase().trim().includes(searchTerm.toLowerCase().trim()));\n    return React.createElement(Column, {\n      key: id,\n      columnId: id,\n      title: title,\n      tickets: filteredTickets,\n      setSearchTerm: setSearchTerm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  })));\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/srba/OneDrive/PROJECTS/gastfreund/kanban-board/src/components/Board/Board.tsx"],"names":["React","useState","useSelector","Column","Container","BoardContainer","SearchInput","Board","columns","state","searchTerm","setSearchTerm","handleSearchChange","event","target","value","Object","values","map","id","title","tickets","filteredTickets","filter","ticket","text","toLowerCase","trim","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,WAApC,QAAuD,UAAvD;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAMC,OAAO,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAV,CAA3B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAS,EAAT,CAA5C;;AAEA,QAAMW,kBAAkB,GAAIC,KAAD,IAAgD;AACzEF,IAAAA,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEL,UAFT;AAGE,IAAA,QAAQ,EAAEE,kBAHZ;AAIE,IAAA,WAAW,EAAC,QAJd;AAKE,kBAAW,8BALb;AAME,mBAAY,QANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,cAAD;AAAgB,mBAAY,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,MAAM,CAACC,MAAP,CAAcT,OAAd,EAAuBU,GAAvB,CAA2B,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,GAAD,KAA4B;AACtD,UAAMC,eAAe,GAAGD,OAAO,CAACE,MAAR,CAAgBC,MAAD,IACrCA,MAAM,CAACC,IAAP,CACGC,WADH,GAEGC,IAFH,GAGGC,QAHH,CAGYlB,UAAU,CAACgB,WAAX,GAAyBC,IAAzB,EAHZ,CADsB,CAAxB;AAOA,WACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAER,EADP;AAEE,MAAA,QAAQ,EAAEA,EAFZ;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEE,eAJX;AAKE,MAAA,aAAa,EAAEX,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAjBA,CADH,CATF,CADF;AAgCD;;AAED,eAAeJ,KAAf","sourcesContent":["import React, { useState, ChangeEvent } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Column from '../Column';\nimport { TicketModel } from '../../models';\nimport { Container, BoardContainer, SearchInput } from './styles';\n\nfunction Board() {\n  const columns = useSelector(state => state);\n  const [searchTerm, setSearchTerm] = useState<string>('');\n\n  const handleSearchChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <Container>\n      <SearchInput\n        type=\"text\"\n        value={searchTerm}\n        onChange={handleSearchChange}\n        placeholder=\"Search\"\n        aria-label=\"Search for a specific ticket\"\n        data-testid=\"search\"\n      />\n      <BoardContainer data-testid=\"board\">\n        {Object.values(columns).map(({ id, title, tickets }) => {\n          const filteredTickets = tickets.filter((ticket: TicketModel) =>\n            ticket.text\n              .toLowerCase()\n              .trim()\n              .includes(searchTerm.toLowerCase().trim())\n          );\n\n          return (\n            <Column\n              key={id}\n              columnId={id}\n              title={title}\n              tickets={filteredTickets}\n              setSearchTerm={setSearchTerm}\n            />\n          );\n        })}\n      </BoardContainer>\n    </Container>\n  );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}